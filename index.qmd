---
title: "Работа с геоданными в R"
subtitle: <https://agricolamz.github.io/2025.05.16_HSE_R_Meet_Up>
author:
  - name: Георгий Мороз
    affiliations:
      - name: Международная лаборатория языковой конвергенции НИУ ВШЭ
lang: ru
language: 
  title-block-affiliation-single: ""
  title-block-author-single: ""
  title-block-published: ""
date: '05/16/2025'
date-format: 'D.MM.YYYY'
format: html
toc: true
---

Мне хочется выразить благодарность Евгению Николаевичу Матерову за его блог и телеграм-канал "Наука и данные" (<https://t.me/naukaidannye>), которые значительно упростили написание данной лекции.

##  Обо мне

- полевой исследователь (31 поездка, почти все на Кавказ)
- фонетист, фонолог, квантитативный лингвист, занимаюсь линвистической географией
- преподаю статистику с применением R
- преподавал и руководил [мастерской по анализу данных](https://www.letnyayashkola.org/andan/) на Летней школе
- записал онлайн курс ["Введение в анализ данных на R для гуманитарных и социальных наук"](https://openedu.ru/course/hse/IDAR/), [материалы](https://agricolamz.github.io/daR4hs/) доступны онлайн
- написал несколько лингвистических пакетов для R
    - [`lingtypology`](https://ropensci.github.io/lingtypology/)
    - [`phonfieldwork`](https://docs.ropensci.org/phonfieldwork/)
    - [`lingglosses`](https://github.com/agricolamz/lingglosses)

## Анализ пространственных данных

Анализ данных может включать

-   сбор данных
-   очистку данных и их предобработку
-   визуализацию данных
-   моделирование данных
-   дескриптивный анализ
-   предиктивный анализ
-   машинное обучение
-   ...

Анализ пространственных данных --- анализ данных, который основывается на понятиях места, расстояний и пространственного взаимодействия как ключевых признаков данных и использует особые инструменты и методы для хранения, визуализации и исследования такого типа данных.

### Пространственные примитивы

В картографии существуют свои элементарные единицы:

```{r}
#| echo: false

knitr::include_graphics("images/01_geometries.png")
```

Эти единицы поддерживают популярные пакеты для манипуляции с георграфическими объектами: `sp`, `sf` и другие. В данном разделе мы не будем учиться операциям с этими объектами (объединение, вычитание и т. п., подробности смотрите в документации к пакету `sp`). Все эти единицы относятся к векторному типу данных.

Кроме того, существует отдельный тип географических данных --- растровый. Такой тип данных подразумевает, некоторую регулярную сетку измерений, например, квадратов, в которых произведен замер (количество выпавших осадков, высотность, граница суши и др.).

```{r}
#| echo: false

knitr::include_graphics("images/02_snow_prob.jpg")
```

Векторные и растровые данные обычно решают разные задачи. Часто во время анализа необходимо комбинировать разные типы данных: например, мы в лаборатории давно мечтаем, чтобы кто-то дигитализировал дороги из старых карт Дагестана, так как современные дороги не отражают исторических связей между населенными пунктами. Бывает и обратное: например, для того, чтобы сделать вывод о ДТП в Москве, имеет смысл перейти от конкретных географических координат к некоторой обобщенной растровой сетке. Важно еще сказать, что легче искать связи в растровых данных, так как становится доступна картографическая алгебра:

```{r}
#| echo: false

knitr::include_graphics("images/03_map_algebra.png")
```

### Картографические проекции

Любое отображение некоторого небесного тела на плоскость называют картографической проекцией. 

Если расстояния в ваших данных небольшие (особенно, если координаты близки к экватору), широту и долготу можно без страха использовать как оси в декартовой системе координат (она же --- проекция Меркатора). Однако при работе с данными масштаба страны/континента/планеты такой подход будет накапливать ошибку из-за искажений одного из следующих типов:

- искажения длин;
- искажения углов;
- искажения площадей;
- искажения форм.

Проекция Меркатора очень сильно искажает площади:

```{r}
#| echo: false
#| layout-ncol: 2
#| out-width: 100%
#| fig-cap: источник --- Википедия
#| fig-subcap:
#| - исходный
#| - с сохранением площадей

knitr::include_graphics("images/04-Merkator-1.png")
knitr::include_graphics("images/05-Merkator-2.png")
```

- [веб-приложение](https://projectionwizard.org/), помогающее выбрать подходящую проекцию
- [веб-приложение](https://mathigon.org/course/circles/spheres-cones-cylinders#sphere-maps), которое показывает как изменяются объекты при преобразовании с сферы на одну из четырех проекций (Меркатора, цилиндрическую, Робинсона, Моллвейде)
- [Здесь](https://proj.org/en/latest/operations/projections/all_images.html) содержится список всех возможных проекций

### География + время

```{r}
#| echo: false

knitr::include_graphics("images/06_paris.png")
```

## Пакеты для визуализации географических данных в R

- Интерактивные
    - [`leaflet`](https://rstudio.github.io/leaflet/index.html)
    - [`mapgl`](https://walker-data.com/mapgl/index.html)
- Статические
    - `ggplot2` + `sf`, `tidyterra`, `maptiles`
    - ...

## Моделирование

Моделирование пространственных отношений позволяет отвечать на вопросы:

- Существует ли какая-то группировка значений исследуемой переменной в пространстве?
- Правда ли, что сходные значения имеют тенденцию находиться рядом?
- Можно ли выделить какие-то регионы концентрации каких-то из значений?

Однако для ответа на все эти вопросы мы прежде всего должны построить граф соседства.

## Языковое сходство рутульских идиомов

```{r}
read_csv("data/rutul_points.csv") |> 
  st_as_sf(coords = c("lon", "lat"),
         crs = "+proj=lonlat") |> 
  st_transform(3857) ->
  points

read_csv("data/rutul_lines.csv") |> 
  st_as_sf(coords = c("lon", "lat"),
           crs = "+proj=lonlat") |> 
  group_by(ID, linguistic_similarity) |> 
  summarize() |> 
  st_cast("MULTILINESTRING") |>  
  st_transform(3857) ->
  lines_as_st

tile <- get_tiles(points, provider = "OpenTopoMap", zoom = 12)

ggplot() +
  geom_spatraster_rgb(data = tile, alpha = 0.3) +
  geom_sf(data = lines_as_st, aes(color = linguistic_similarity), linewidth = 2)+
  geom_sf_label(data = points, aes(label = village))+
  theme_minimal()+
  scale_color_gradient(low = "royalblue", high = "tomato")+
  labs(x = NULL, y = NULL, color = NULL)
```

## Как определить соседей?

```{r}
#| out-width: 100%
#| fig-align: center

include_graphics("images/04-neighbour.png")
```

Из курса М. Фляйшманна "Spatial Data Science for Social Geography"

## Как определить соседей?

```{r}
#| out-width: 100%
#| fig-align: center

include_graphics("images/05-neighbour.png")
```

Из курса М. Фляйшманна "Spatial Data Science for Social Geography"

## Как определить соседей?

```{r}
#| out-width: 100%
#| fig-align: center

include_graphics("images/06-neighbour.png")
```

Из курса М. Фляйшманна "Spatial Data Science for Social Geography"

## Пространственная автокорреляция

Степень в какой сходные значения находятся рядом.

- положительная автокорреляция: похожие значения находятся рядом
- отрицательная автокорреляция: похожие значения находятся далеко друг от друга

\pause

- глобальная: имеют ли значения тенденцию оказываться рядом с другими похожими/непохожими значениями;
- локальная: существует ли некоторый специфический фрагментм пространства, где наблюдается необычная концентрация похожими/непохожих значений.

```{r}
#| include: false

df <- read_csv("data/east_caucasian_morning_greetings.csv")

df |> 
  select(lat, lon) |> 
  tri2nb() |> 
  nb2listw(style="W", zero.policy=TRUE) |> 
  moran(x = df$value |> factor() |> as.double(),
        n = nrow(df), 
        S0 = nrow(df),
        listw = _) ->
  moran_i
```

## Значение Moran I: `r moran_i$I`

```{r}
#| include: false

read_csv("data/east_caucasian_morning_greetings.csv") |> 
  st_as_sf(coords = c("lon", "lat"),
           crs = "+proj=lonlat") |> 
  st_transform(3857) ->
  east_caucasian_morning_greetings

tile <- get_tiles(east_caucasian_morning_greetings, provider = "OpenTopoMap", zoom = 10)
```


```{r}
ggplot() +
  geom_spatraster_rgb(data = tile, alpha = 0.5) +
  geom_sf(data = east_caucasian_morning_greetings, color = "black", size = 4) +
  geom_sf(data = east_caucasian_morning_greetings, aes(color = value), size = 3) +
  coord_sf(crs = 3857)+
  theme(text = element_text(size = 20))+
  theme_minimal()+
  labs(color = NULL,
       caption = "data Naccarato, Verhees (2021). 'Morning greetings'. In: TALD")
```

```{r}
#| include: false

df <- read_csv("data/east_caucasian_palatalized_consonants.csv")

df |> 
  select(lat, lon) |> 
  tri2nb() |> 
  nb2listw(style="W", zero.policy=TRUE) |> 
  moran(x = df$value |> factor() |> as.double(),
        n = nrow(df), 
        S0 = nrow(df),
        listw = _) ->
  moran_i
```

## Значение Moran I: `r moran_i$I`

```{r}
read_csv("data/east_caucasian_palatalized_consonants.csv") |> 
  st_as_sf(coords = c("lon", "lat"),
           crs = "+proj=lonlat") |> 
  st_transform(3857) ->
  east_caucasian_palatalized_consonants

tile <- get_tiles(east_caucasian_palatalized_consonants, provider = "OpenTopoMap", zoom = 10)

ggplot() +
  geom_spatraster_rgb(data = tile, alpha = 0.5) +
  geom_sf(data = east_caucasian_palatalized_consonants, color = "black", size = 4) +
  geom_sf(data = east_caucasian_palatalized_consonants, aes(color = value), size = 3) +
  coord_sf(crs = 3857)+
  theme(text = element_text(size = 20))+
  theme_minimal()+
  labs(color = NULL,
       caption = "data Moroz (2021). 'Palatalized consonants'. In: TALD")
```


### Машинное обучение

Якуб Новосад написал статью, где показывает, как использовать все три основные фреймворка машинного обучения в R (`caret`, `tidymodels`, `mlr3`) к геоданным <https://geocompx.org/post/2025/sml-bp1/>.

