---
title: "Работа с геоданными в R"
subtitle: <https://agricolamz.github.io/2025.05.16_HSE_R_Meet_Up>
author:
  - name: Георгий Мороз
    affiliations:
      - name: Международная лаборатория языковой конвергенции НИУ ВШЭ
lang: ru
language: 
  title-block-affiliation-single: ""
  title-block-author-single: ""
  title-block-published: ""
date: '05/16/2025'
date-format: 'D.MM.YYYY'
format: html
toc: true
editor_options: 
  chunk_output_type: console
---

Мне хочется выразить благодарность Евгению Николаевичу Матерову за его блог и телеграм-канал "Наука и данные" (<https://t.me/naukaidannye>), которые значительно упростили написание данных материалов.

Если Вам хочется изучить тему пространственного анализа, Вам нужно идти в [раздел Geospatial](https://www.bigbookofr.com/chapters/geospatial) ресурса Big Book of R, сейчас там уже 19 материалов, размером с книгу каждая.

```{r}
#| include: false

library(tidyverse)
library(sf)
library(maptiles)
library(tidyterra)
library(leaflet)
library(leaflet.minicharts)
```


```{r}
library(leaflet)
library(tidyverse)
library(sf)
library(maptiles)
library(tidyterra)
library(leaflet.minicharts)
```

##  Обо мне

- полевой исследователь (31 поездка, почти все на Кавказ)
- фонетист, фонолог, квантитативный лингвист, занимаюсь лингвистической географией
- преподаю статистику с применением R
- преподавал и руководил [мастерской по анализу данных](https://www.letnyayashkola.org/andan/) на Летней школе
- записал онлайн курс ["Введение в анализ данных на R для гуманитарных и социальных наук"](https://openedu.ru/course/hse/IDAR/), [материалы](https://agricolamz.github.io/daR4hs/) доступны онлайн
- написал несколько лингвистических пакетов для R
    - [`lingtypology`](https://ropensci.github.io/lingtypology/)
    - [`phonfieldwork`](https://docs.ropensci.org/phonfieldwork/)
    - [`lingglosses`](https://github.com/agricolamz/lingglosses)

## Анализ пространственных данных

Анализ данных может включать

-   сбор данных
-   очистку данных и их предобработку
-   визуализацию данных
-   моделирование данных
-   дескриптивный анализ
-   предиктивный анализ
-   машинное обучение
-   ...

Анализ пространственных данных --- анализ данных, который основывается на понятиях места, расстояний и пространственного взаимодействия как ключевых признаков данных и использует особые инструменты и методы для хранения, визуализации и исследования такого типа данных.

### Пространственные примитивы

В картографии существуют свои элементарные единицы:

```{r}
#| echo: false
#| out-width: 100%

knitr::include_graphics("images/01_geometries.png")
```

Эти единицы поддерживают популярные пакеты для манипуляции с географическими объектами: `sp`, `sf` и другие. В данном разделе мы не будем учиться операциям с этими объектами (объединение, вычитание и т. п., подробности смотрите в документации к пакету `sp`). Все эти единицы относятся к векторному типу данных.

Кроме того, существует отдельный тип географических данных --- растровый. Такой тип данных подразумевает, некоторую регулярную сетку измерений, например, квадратов, в которых произведен замер (количество выпавших осадков, высотность, граница суши и др.).

```{r}
#| echo: false
#| fig-cap: "Всячески рекомендую посетить [страницу Доменика Ройе](https://dominicroye.github.io/project/): он создал очень много захватывающих дух визуализаций."

knitr::include_graphics("images/02_snow_prob.jpg")
```

Векторные и растровые данные обычно решают разные задачи. Часто во время анализа необходимо комбинировать разные типы данных: например, мы в лаборатории давно мечтаем, чтобы кто-то дигитализировал дороги из старых карт Дагестана, так как современные дороги не отражают исторических связей между населенными пунктами. Бывает и обратное: например, для того, чтобы сделать вывод о ДТП в Москве, имеет смысл перейти от конкретных географических координат к некоторой обобщенной растровой сетке. Важно еще сказать, что легче искать связи в растровых данных, так как становится доступна картографическая алгебра:

```{r}
#| echo: false
#| fig-align: center

knitr::include_graphics("images/03_map_algebra.png")
```

### Картографические проекции

Любое отображение некоторого небесного тела на плоскость называют картографической проекцией. 

Если расстояния в ваших данных небольшие (особенно, если координаты близки к экватору), широту и долготу можно без страха использовать как оси в декартовой системе координат (она же --- проекция Меркатора). Однако при работе с данными масштаба страны/континента/планеты такой подход будет накапливать ошибку из-за искажений одного из следующих типов:

- искажения длин;
- искажения углов;
- искажения площадей;
- искажения форм.

Проекция Меркатора очень сильно искажает площади:

```{r}
#| echo: false
#| layout-ncol: 2
#| out-width: 100%
#| fig-cap: источник --- Википедия
#| fig-subcap:
#| - исходный
#| - с сохранением площадей

knitr::include_graphics("images/04-Merkator-1.png")
knitr::include_graphics("images/05-Merkator-2.png")
```

- [веб-приложение](https://projectionwizard.org/), помогающее выбрать подходящую проекцию
- [веб-приложение](https://mathigon.org/course/circles/spheres-cones-cylinders#sphere-maps), которое показывает, как изменяются объекты при преобразовании с сферы на одну из четырех проекций (Меркатора, цилиндрическую, Робинсона, Моллвейде)
- [Здесь](https://proj.org/en/latest/operations/projections/all_images.html) содержится список всех возможных проекций

### География + время

```{r}
#| echo: false
#| fig-cap: "Всячески рекомендую посетить [страницу Доменика Ройе](https://dominicroye.github.io/project/): он создал очень много захватывающих дух визуализаций."

knitr::include_graphics("images/06_paris.png")
```

## Пакеты для визуализации географических данных в R

- Интерактивные
    - [`leaflet`](https://rstudio.github.io/leaflet/index.html)
    - [`mapgl`](https://walker-data.com/mapgl/index.html)
- Статические
    - `ggplot2` + `sf`, `tidyterra`, `maptiles`
    - ...

Давайте нарисуем данные кладбища Стародуб (данные полевого архива [SFIRA](https://sfira.org/)).

::: {.panel-tabset}

### `ggplot2` 

```{r}
#| fig-align: center

read_csv("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/starodub.csv",
         show_col_types = FALSE) |> 
  st_as_sf(coords = c("longitude", "latitude"), crs = "+proj=lonlat") |> 
  st_transform(3857) ->
  starodub_transformed

tile <- get_tiles(starodub_transformed, provider = "OpenTopoMap", zoom = 17)

ggplot() +
  geom_spatraster_rgb(data = tile, alpha = 0.3) +
  geom_sf(data = starodub_transformed)+
  theme_minimal()+
  labs(x = NULL, y = NULL, color = NULL)
```

### `leaflet` 

```{r}
starodub <- read_csv("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/starodub.csv", show_col_types = FALSE)

starodub |> 
  leaflet() |>  
  addProviderTiles("OpenTopoMap",   options = providerTileOptions(opacity = 0.3)) |> 
  addCircles(lng = ~longitude, # обратите внимание на особый синтаксис с тильдой
             lat = ~latitude,
             color = "black",
             fillOpacity = 1,
             label = ~tombstone_code,
             radius = 2,
             opacity = 0)
```

:::

Удалим надгробия, для которых неизвестен пол и визуализируем.

::: {.panel-tabset}

### `ggplot2` 

```{r}
#| fig-align: center

starodub_transformed |> 
  filter(gender != "unknown") ->
  starodub_transformed
  
ggplot() +
  geom_spatraster_rgb(data = tile, alpha = 0.3) +
  geom_sf(aes(color = gender), data = starodub_transformed)+
  theme_minimal()+
  scale_color_manual(values = c("#ebc106", "#396c03")) +
  labs(x = NULL, y = NULL, color = NULL)
```

### `leaflet` 

```{r}
starodub |> 
  filter(gender != "unknown") |> 
  pull(gender) |> 
  colorFactor(c("#ebc106", "#396c03"), domain = _) ->
  pal

starodub |> 
  filter(gender != "unknown") |> 
  leaflet() |>  
  addProviderTiles("OpenTopoMap",   options = providerTileOptions(opacity = 0.3)) |> 
  addCircles(lng = ~longitude, # обратите внимание на особый синтаксис с тильдой
             lat = ~latitude,
             color = ~pal(gender),
             fillOpacity = 1,
             label = ~tombstone_code,
             radius = 2,
             opacity = 0)
```

:::

Благодаря пакету `leaflet.minicharts` можно еще сделать анимацию появления надгробий в зависимости от времени.

```{r}
starodub |>   
  filter(!is.na(year),
         gender != "unknown") |> 
  arrange(desc(year))  |> 
  mutate(value = 1) |> 
  pivot_wider(names_from = year, values_from = value, values_fill = 0) |> 
  pivot_longer(values_to = "value", names_to = "year", `1847`:`2011`) |> 
  group_by(tombstone_code) |> 
  mutate(value = cumsum(value)) ->
  starodub_sum

leaflet() |> 
  addTiles() |> 
  addMinicharts(lng = starodub_sum$longitude,
                lat = starodub_sum$latitude,
                chartdata = starodub_sum$value,
                time = starodub_sum$year, 
                fillColor = pal(starodub_sum$gender),
                width = 7)
```

```{r}
#| echo: false
#| fig-align: center

knitr::include_graphics("images/07_airplane.jpg")
```

Иногда при анализе следует вспоминать про ошибку выжившего и работу Абрахама Вальда.

Мы рассмотрели обычные табличные данные, но а как же другие примитивы? С ними все сложнее.


::: {.panel-tabset}

### `ggplot2` 

Скачаем полигоны в [формате Shapefile](https://en.wikipedia.org/wiki/Shapefile).

```{r}
st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/akhvakhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "akhvakhskiy") ->
  akhvakhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/botlikhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "botlikhskiy") ->
  botlikhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/gumbetovskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "gumbetovskiy") ->
  gumbetovskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/khunzakhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "khunzakhskiy") ->
  khunzakhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/shamilskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "shamilskiy") ->
  shamilskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/tlyaratinskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "tlyaratinskiy") ->
  tlyaratinskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/tsumadinskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "tsumadinskiy") ->
  tsumadinskiy

akhvakhskiy |> 
  bind_rows(botlikhskiy, gumbetovskiy, khunzakhskiy, shamilskiy, tlyaratinskiy, tsumadinskiy) ->
  districts

districts |> 
  ggplot() + 
  geom_sf(aes(geometry = geometry), fill = "grey95", color = "grey40")+
  theme_minimal()
```

Добавим реку:

```{r}
st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/andiyskoye_koysu.geoline", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) ->
  andiyskoye_koysu

districts |> 
  ggplot() + 
  geom_sf(aes(geometry = geometry), fill = "grey95", color = "grey40")+
  geom_sf(aes(geometry = geometry), data = andiyskoye_koysu, color = "lightblue", linewidth = 2) +
  theme_minimal()
```

Добавим населенные пункты.

```{r}
andic_languages <- read_csv("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/andic_languages.csv")

districts |> 
  ggplot() + 
  geom_sf(aes(geometry = geometry), fill = "grey95", color = "grey40")+
  geom_sf(aes(geometry = geometry), data = andiyskoye_koysu, color = "lightblue", linewidth = 2) +
  geom_point(aes(lon, lat, color = default_level), data = andic_languages)+
  theme_minimal()+
  ylim(42.2, 42.9)+
  xlim(45.7, 46.7)+
  labs(color = NULL, x = NULL, y = NULL)
```

### `leaflet`

Скачаем полигоны в [формате Shapefile](https://en.wikipedia.org/wiki/Shapefile).

```{r}
st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/akhvakhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "akhvakhskiy") ->
  akhvakhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/botlikhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "botlikhskiy") ->
  botlikhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/gumbetovskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "gumbetovskiy") ->
  gumbetovskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/khunzakhskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "khunzakhskiy") ->
  khunzakhskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/shamilskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "shamilskiy") ->
  shamilskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/tlyaratinskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "tlyaratinskiy") ->
  tlyaratinskiy

st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/tsumadinskiy.geoshape", as_tibble = TRUE) |>
  st_crop(xmin=-45, xmax=47, ymin=41, ymax=42.9) |> 
  mutate(district = "tsumadinskiy") ->
  tsumadinskiy

akhvakhskiy |> 
  bind_rows(botlikhskiy, gumbetovskiy, khunzakhskiy, shamilskiy, tlyaratinskiy, tsumadinskiy) ->
  districts

leaflet() |> 
  addPolygons(color = "black",
              opacity = 1,
              weight = 1,
              data = getMapData(leaflet(districts)))
```

Добавим реку:

```{r}
andiyskoye_koysu <- st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/andiyskoye_koysu.geoline", as_tibble = TRUE) 

leaflet() |> 
  addPolygons(color = "black",
              opacity = 1,
              weight = 1,
              data = getMapData(leaflet(districts))) |> 
  addPolylines(color = "lightblue",
               opacity = 1, 
               weight = 3,
               data = getMapData(leaflet(andiyskoye_koysu))) 
```

Добавим населенные пункты.

```{r}
andic_languages <- read_csv("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/andic_languages.csv")

andic_languages |> 
  pull(default_level) |> 
  colorFactor(scales::hue_pal()(9), domain = _) ->
  pal

andiyskoye_koysu <- st_read("https://raw.githubusercontent.com/agricolamz/2025.05.16_HSE_R_Meet_Up/refs/heads/main/data/andiyskoye_koysu.geoline", as_tibble = TRUE) 

leaflet() |> 
  addPolygons(color = "black",
              opacity = 1,
              weight = 1,
              data = getMapData(leaflet(districts))) |> 
  addPolylines(color = "lightblue",
               opacity = 1, 
               weight = 3,
               data = getMapData(leaflet(andiyskoye_koysu))) |> 
  addCircles(lng = ~lon,
             lat = ~lat,
             opacity = 1,
             color = ~pal(default_level),
             data = getMapData(leaflet(andic_languages)))
```

:::

## Моделирование

Моделирование пространственных отношений позволяет отвечать на вопросы:

- Существует ли какая-то группировка значений исследуемой переменной в пространстве?
- Правда ли, что сходные значения имеют тенденцию находиться рядом?
- Можно ли выделить какие-то регионы концентрации каких-то из значений?

Однако для ответа на все эти вопросы мы прежде всего должны построить граф соседства. Как определить соседей?

```{r}
#| echo: false
#| layout-ncol: 2
#| out-width: 100%
#| fig-cap: Из курса М. Фляйшманна "Spatial Data Science for Social Geography"
#| fig-subcap:
#| - непосредственное соседство
#| - соседство через радиус

knitr::include_graphics("images/09-neighbour.png")
knitr::include_graphics("images/10-neighbour.png")
```

### Пространственная автокорреляция

Степень в какой сходные значения находятся рядом.

- положительная автокорреляция: похожие значения находятся рядом
- отрицательная автокорреляция: похожие значения находятся далеко друг от друга
- глобальная: имеют ли значения тенденцию оказываться рядом с другими похожими/непохожими значениями;
- локальная: существует ли некоторый специфический фрагментм пространства, где наблюдается необычная концентрация похожими/непохожих значений.

### Машинное обучение

Якуб Новосад написал статью, где показывает, как использовать все три основные фреймворка машинного обучения в R (`caret`, `tidymodels`, `mlr3`) к геоданным <https://geocompx.org/post/2025/sml-bp1/>.

